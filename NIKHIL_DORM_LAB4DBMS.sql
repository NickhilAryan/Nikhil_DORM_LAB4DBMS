CREATE TABLE IF NOT EXISTS supplier (
  SUPP_ID int primary key,
  SUPP_NAME varchar(50) NOT NULL,
  SUPP_CITY varchar(50),
  SUPP_PHONE varchar(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS customer (
  CUS_ID INT NOT NULL,
  CUS_NAME VARCHAR(20) NOT NULL,
  CUS_PHONE VARCHAR(10) NOT NULL,
  CUS_CITY varchar(30) NOT NULL,
  CUS_GENDER CHAR,
  PRIMARY KEY (CUS_ID)
);

CREATE TABLE IF NOT EXISTS category (
  CAT_ID INT NOT NULL,
  CAT_NAME VARCHAR(20) NOT NULL,
  PRIMARY KEY (CAT_ID)
);

CREATE TABLE IF NOT EXISTS product (
  PRO_ID INT NOT NULL,
  PRO_NAME VARCHAR(20) NOT NULL DEFAULT 'Dummy',
  PRO_DESC VARCHAR(60),
  CAT_ID INT NOT NULL,
  PRIMARY KEY (PRO_ID),
  FOREIGN KEY (CAT_ID) REFERENCES category (CAT_ID)
);

CREATE TABLE IF NOT EXISTS supplier_pricing (
  PRICING_ID INT NOT NULL,
  PRO_ID INT NOT NULL,
  SUPP_ID INT NOT NULL,
  SUPP_PRICE INT DEFAULT 0,
  PRIMARY KEY (PRICING_ID),
  FOREIGN KEY (PRO_ID) REFERENCES product (PRO_ID),
  FOREIGN KEY (SUPP_ID) REFERENCES supplier(SUPP_ID)
);

CREATE TABLE IF NOT EXISTS ORDER_TABLE (
  ORD_ID INT NOT NULL,
  ORD_AMOUNT INT NOT NULL,
  ORD_DATE DATE,
  CUS_ID INT NOT NULL,
  PRICING_ID INT NOT NULL,
  PRIMARY KEY (ORD_ID),
  FOREIGN KEY (CUS_ID) REFERENCES customer(CUS_ID),
  FOREIGN KEY (PRICING_ID) REFERENCES supplier_pricing(PRICING_ID)
);

CREATE TABLE IF NOT EXISTS rating (
  RAT_ID INT NOT NULL,
  ORD_ID INT NOT NULL,
  RAT_RATSTARS INT NOT NULL,
  PRIMARY KEY (RAT_ID),
  FOREIGN KEY (ORD_ID) REFERENCES ORDER_TABLE(ORD_ID)
);

SELECT COUNT(t2.cus_gender) AS NoOfCustomers, t2.cus_gender FROM (
  SELECT t1.cus_id, t1.cus_gender, SUM(t1.ord_amount) as TotalAmount FROM (
    SELECT ORDER_TABLE.*, customer.cus_gender FROM ORDER_TABLE
    INNER JOIN customer ON ORDER_TABLE.cus_id = customer.cus_id
    WHERE ORDER_TABLE.ord_amount >= 3000
  ) AS t1  
  GROUP BY t1.cus_id, t1.cus_gender
) AS t2 
GROUP BY t2.cus_gender
LIMIT 0, 100
